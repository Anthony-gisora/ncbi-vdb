# ===========================================================================
#
#                            PUBLIC DOMAIN NOTICE
#               National Center for Biotechnology Information
#
#  This software/database is a "United States Government Work" under the
#  terms of the United States Copyright Act.  It was written as part of
#  the author's official duties as a United States Government employee and
#  thus cannot be copyrighted.  This software/database is freely available
#  to the public for use. The National Library of Medicine and the U.S.
#  Government have not placed any restriction on its use or reproduction.
#
#  Although all reasonable efforts have been taken to ensure the accuracy
#  and reliability of the software and data, the NLM and the U.S.
#  Government do not and cannot warrant the performance or results that
#  may be obtained by using this software or data. The NLM and the U.S.
#  Government disclaim all warranties, express or implied, including
#  warranties of performance, merchantability or fitness for any particular
#  purpose.
#
#  Please cite the author in any work or product based on this material.
#
# ===========================================================================

default all std: makedirs cmake

# determine shell environment
CONFIG_FILE = $(TOP)/build/Makefile.config
ifeq (no, $(shell test -f $(CONFIG_FILE) && echo yes || echo no))
    $(error "*** File '$(CONFIG_FILE)' is missing. Please run $(TOP)/build/configure")
endif

# determine SRCDIR
ifdef MODULE
    SRCDIR=$(TOP)/$(MODULE)
else
    SRCDIR=$(TOP)/
endif

# load build configuration
CURDIR = $(SRCDIR)
include $(CONFIG_FILE)

TEST_BINDIR = $(TARGDIR)/test-bin
FLIBDIR = $(TARGDIR)/fuzz

$(FLIBDIR):
	mkdir -p $@

# TODO: may be relevant for configuring Java under CMake
# CLSPATH         ?= $(TARGDIR)/java
# CLASSPATH       ?= $(CLSPATH)
# CLASSDIR        ?= $(TARGDIR)/$(MODULE)
# TEST_CLSPATH    ?= $(TARGDIR)/test/java
# JAVASOURCEPATH  ?= $(TOP)/java

# path to the ncbi sub-directory
# this is where modules and installed schema files are kept
# under Linux and Mac, it can be binary or library
# TODO: Makefile kfg: copy certs.kfg, default.kfg from libs/kfg src to ncbi-outdir/ncbi-vdb/linux/gcc/x86_64/dbg/bin/ncbi, lib..
NCBIDIR = $(LIBDIR)/ncbi $(BINDIR)/ncbi

# clean rules
clean:
	-rm -rf $(OBJDIR) $(ILIBDIR) $(LIBDIR) $(BINDIR) $(TEST_BINDIR)

# TODO: make it better
config:
	@ echo "  current build is $(LOCAL_OR_REMOTE) $(BUILD_OS) $(BUILD) $(ARCH) build using $(LD) tools"
	@ echo "  output target directory is '$(TARGDIR)'"
	@ echo

# TODO: add fuzz test
fuzz: makedirs

#-------------------------------------------------------------------------------
# CMake bridge
#

ifeq (dbg,$(BUILD))
    CMAKE_BUILD = Debug
else
    CMAKE_BUILD = Release
endif

unexport TOP SRCDIR

# CPP comes from Makefile.config.$(OS_ARCH)
# TODO: simplify Makefile.config.$(OS_ARCH) generated by ./configure - switch from using LD to a new variable
CMAKEFLAGS = \
    -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=$(ILIBDIR) \
    -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=$(LIBDIR)  \
    -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=$(BINDIR)  \
    -DCMAKE_TEST_OUTPUT_DIRECTORY=$(TEST_BINDIR)\
    -DCMAKE_BUILD_TYPE=$(CMAKE_BUILD)           \
    -DCMAKE_INSTALL_PREFIX=$(INST_BINDIR)/..    \
    -DCMAKE_C_COMPILER=$(shell which $(LD))       \
    -DCMAKE_CXX_COMPILER=$(shell which $(CPP))     \
    -DNGS_INCDIR=$(NGS_INCDIR)                  \
    -DNGS_LIBDIR=$(NGS_LIBDIR)                  \

    # -DVERSION=$(VERSION)                        \
    # -DMAJVERS=$(MAJVERS)                        \
    # -DPLATFORM=$(ARCH)                          \
    # -DOUTDIR=$(BUILD_PREFIX)/..                 \

makedirs:
	mkdir -p $(TARGDIR)/obj

cmake: makedirs
	cd $(TARGDIR)/obj; cmake $(CMAKEFLAGS) $(TOP)
	+ make -C $(OBJDIR) --no-print-directory

ctest: cmake
	cd $(OBJDIR); ctest $(CMAKEFLAGS) --build-exe-dir $(BINDIR) $(CTESTARGS) -E "^SlowTest_" --verbose

ctestall: cmake
	cd $(OBJDIR); ctest $(CMAKEFLAGS) --build-exe-dir $(BINDIR) $(CTESTARGS) --verbose

cinstall: cmake
	+ make -C $(TARGDIR)/obj install

test runtests: ctest

slowtests: ctestall

.PHONY: cmake ctest ctestall test runtests slowtests

#-------------------------------------------------------------------------------
# standard targets

#-------------------------------------------------------------------------------
# install
#
install: cinstall

# TODO:
uninstall:

.PHONY: install uninstall

#-------------------------------------------------------------------------------
# configuration help
#
# TODO:
help configure:
	@ echo "Before initial build, run './configure --build-prefix=<out>' from"
	@ echo "the project root to set the output directory of your builds."
	@ echo "Run ./configure -h for full description."
	@ echo
	@ echo "Targets:"
	@ echo "all, std        : full build"
	@ echo "clean           : remove build results"
	@ echo "test, runtests  : build and run fast tests"
	@ echo "slowtests       : build and run all (fast and slow) tests"
	@ echo "install         : build, install to $(INST_BINDIR)"
	@ echo

.PHONY: help configure

#-------------------------------------------------------------------------------

.PHONY: default all std
